{"version":3,"file":"static/js/651.1342a189.chunk.js","mappings":"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","sources":["../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","redux/contacts/selectors.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutProperties.js","../node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js","../node_modules/clsx/dist/clsx.m.js","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","pages/PhoneBook/PhoneBook.styled.jsx","pages/PhoneBook/PhoneBook.jsx"],"sourcesContent":["// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectItems = state => state.contacts.items; // Всі контакти зі стейта Store\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectFilter = state => state.filter;\n\n// Сортування контактів за алфавітом\nexport const selectSortedContacts = state => {\n  const sortedContacts = [...state.contacts.items].sort((a, b) =>\n    a.name.localeCompare(b.name)\n  );\n  return sortedContacts;\n};\n\n// Фільтрація відсортованих контактів за значенням фільтра\nexport const selectFilteredContacts = createSelector(\n  [selectSortedContacts, selectFilter],\n  (contacts, filter) =>\n    contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    )\n);\n\n// Фільтрація контактів за значенням фільтра\n// export const selectFilteredContacts = createSelector(\n//   [selectItems, selectFilter],\n//   (contacts, filter) =>\n//     contacts.filter(contact =>\n//       contact.name.toLowerCase().includes(filter.toLowerCase())\n//     )\n// );\n","import objectWithoutPropertiesLoose from \"./objectWithoutPropertiesLoose.js\";\nexport default function _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n  var target = objectWithoutPropertiesLoose(source, excluded);\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}","function r(e){var t,f,n=\"\";if(\"string\"==typeof e||\"number\"==typeof e)n+=e;else if(\"object\"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(f=r(e[t]))&&(n&&(n+=\" \"),n+=f);else for(t in e)e[t]&&(n&&(n+=\" \"),n+=t);return n}export function clsx(){for(var e,t,f=0,n=\"\";f<arguments.length;)(e=arguments[f++])&&(t=r(e))&&(n&&(n+=\" \"),n+=t);return n}export default clsx;","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  display: flex;\n  gap: 25px;\n  flex-direction: column;\n  padding: 30px;\n\n  border: 1px solid #62ada0;\n  border-radius: 6px;\n  box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);\n`;\n\nexport const FormInput = styled.input`\n  width: 300px;\n  font-size: 14px;\n  padding: 4px;\n`;\n\nexport const FormLabel = styled.label`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  gap: 30px;\n\n  font-size: 16px;\n  font-weight: 500;\n`;\n\nexport const FormBtn = styled.button`\n  cursor: pointer;\n\n  display: block;\n  margin: 0 auto;\n  margin-top: 6px;\n\n  width: 100%;\n  max-width: 140px;\n  height: 30px;\n  padding: 2px 5px;\n\n  color: #fff;\n  background-color: #62ada0;\n  font-size: 14px;\n  font-weight: 700;\n\n  border: none;\n  border-radius: 6px;\n  box-shadow: rgba(0, 0, 0, 0.24) 10px 10px 5px 0px;\n\n  transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    background-color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover {\n    color: #010101;\n    background-color: #c8e9e3;\n    box-shadow: rgb(255, 255, 255) -2px -2px 5px,\n      rgba(0, 0, 0, 0.24) 2px 2px 5px;\n  }\n`;\n","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectItems } from '../../redux/contacts/selectors';\nimport { addContact } from '../../redux/contacts/contactsOperations';\nimport { toast } from 'react-toastify';\nimport { Form, FormLabel, FormInput, FormBtn } from './ContactForm.styled';\n\nconst ContactForm = () => {\n  const [name, setName] = useState('');\n  const [phone, setPhone] = useState('');\n\n  const dispatch = useDispatch(); // Хук для відправлення action\n  const contacts = useSelector(selectItems); // Отримуємо всі контакти зі стейта Store\n\n  // Відповідає за оновлення стану (контрольований інпут)\n  const handleInputChange = evt => {\n    const { name, value } = evt.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setPhone(value);\n        break;\n      default:\n        break;\n    }\n  };\n\n  // Викликається під час відправлення форми\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    const isAdded = contacts.find(\n      contact => contact.name.toLowerCase() === name.toLowerCase()\n    );\n    if (isAdded) {\n      return toast.error(`${name} is already in contacts.`);\n    }\n\n    const newContact = { name: name, number: phone }; // Cтворення нового контакту\n    // Відправлення action addContact\n    dispatch(addContact(newContact));\n    resetForm(); // Очистка форми\n  };\n\n  const resetForm = () => {\n    setName('');\n    setPhone('');\n  };\n\n  return (\n    <Form onSubmit={handleSubmit}>\n      <FormLabel>\n        Name:\n        <FormInput\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          value={name}\n          onChange={handleInputChange}\n        />\n      </FormLabel>\n\n      <FormLabel>\n        Number:\n        <FormInput\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          value={phone}\n          onChange={handleInputChange}\n        />\n      </FormLabel>\n\n      <FormBtn type=\"submit\">Add contact</FormBtn>\n    </Form>\n  );\n};\n\nexport default ContactForm;\n","import styled from 'styled-components';\n\nexport const ContactsList = styled.ul`\n  background-color: #f4efef;\n  padding: 32px;\n\n  display: flex;\n  flex-direction: column;\n  gap: 16px;\n  max-width: 100%;\n  width: 400px;\n`;\n\nexport const ContactItem = styled.li`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nexport const Btn = styled.button`\n  cursor: pointer;\n  display: block;\n\n  width: 100%;\n  max-width: 65px;\n  height: 26px;\n  padding: 2px 5px;\n\n  color: #fff;\n  background-color: #62ada0;\n  font-size: 14px;\n  font-weight: 700;\n\n  border: none;\n  border-radius: 6px;\n  box-shadow: rgba(0, 0, 0, 0.24) 5px 5px 5px 0px;\n\n  transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    background-color 250ms cubic-bezier(0.4, 0, 0.2, 1),\n    box-shadow 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover {\n    color: #010101;\n    background-color: #c8e9e3;\n    box-shadow: rgb(255, 255, 255) -2px -2px 5px,\n      rgba(0, 0, 0, 0.24) 2px 2px 5px;\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { selectFilteredContacts } from '../../redux/contacts/selectors';\nimport { deleteContact } from '../../redux/contacts/contactsOperations';\nimport { ContactsList, ContactItem, Btn } from './ContactList.styled';\n\nconst ContactList = () => {\n  const dispatch = useDispatch();\n  const filteredContacts = useSelector(selectFilteredContacts);\n\n  const handleDeleteContact = contactId => {\n    dispatch(deleteContact(contactId));\n  };\n\n  return (\n    <ContactsList>\n      {filteredContacts.map(({ id, name, number }) => (\n        <ContactItem key={id}>\n          <span>{name}: </span>\n          <span>{number}</span>\n          <Btn type=\"button\" onClick={() => handleDeleteContact(id)}>\n            Delete\n          </Btn>\n        </ContactItem>\n      ))}\n\n      {!filteredContacts?.length && <div>No contacts found.</div>}\n    </ContactsList>\n  );\n};\n\nexport default ContactList;\n","import styled from 'styled-components';\n\nexport const FilterBlock = styled.div``;\n\nexport const FilterLabel = styled.label`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  gap: 10px;\n\n  font-size: 16px;\n  font-weight: 500;\n`;\n\nexport const FilterInput = styled.input`\n  width: 250px;\n  margin-bottom: 20px;\n  font-size: 14px;\n  padding: 4px;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from '../../redux/contacts/filterSlice';\nimport { selectFilter } from '../../redux/contacts/selectors';\nimport { FilterBlock, FilterLabel, FilterInput } from './Filter.styled';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilter);\n\n  const handleChange = evt => {\n    const valueFilter = evt.currentTarget.value.trim();\n    dispatch(setFilter(valueFilter));\n  };\n\n  return (\n    <FilterBlock>\n      <FilterLabel>\n        Find contacts by name\n        <FilterInput\n          type=\"text\"\n          placeholder=\"Search...\"\n          value={filter}\n          onChange={handleChange}\n        />\n      </FilterLabel>\n    </FilterBlock>\n  );\n};\n\nexport default Filter;\n","import styled from 'styled-components';\n\nexport const Container = styled.section`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n\n  font-size: 16px;\n`;\n\nexport const Title = styled.h1`\n  margin: 30px 0 20px;\n`;\n\nexport const Subtitle = styled.h2`\n  margin: 30px 0 20px;\n`;\n\nexport const AmountContacts = styled.div`\n  margin-bottom: 20px;\n  font-size: 18px;\n  font-weight: 500;\n`;\n\nexport const ContactsNum = styled.span`\n  padding: 2px 8px;\n  background-color: #f4efef;\n`;\n\nexport const Message = styled.p`\n  font-size: 18px;\n  font-weight: 500;\n  padding: 40px 60px;\n  background-color: #f4efef;\n`;\n","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { fetchContacts } from '../../redux/contacts/contactsOperations';\nimport { selectItems, selectIsLoading, selectError } from '../../redux/contacts/selectors';\nimport ContactForm from '../../components/ContactForm';\nimport ContactList from '../../components/ContactList';\nimport Filter from '../../components/Filter';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport {\n  Container,\n  Title,\n  Subtitle,\n  AmountContacts,\n  ContactsNum,\n  Message,\n} from './PhoneBook.styled';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectItems); // Отримуємо всі контакти зі стейта Store\n  const error = useSelector(selectError);\n  const isLoading = useSelector(selectIsLoading);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <Container>\n      <Title>PhoneBook</Title>\n      <ContactForm />\n\n      <Subtitle>Contacts</Subtitle>\n      <AmountContacts>\n        All contacts in the phonebook:{' '}\n        <ContactsNum>{contacts.length}</ContactsNum>\n      </AmountContacts>\n\n      {isLoading && !error && <b>Request in progress...</b>}\n      {error && error}\n\n      {contacts.length > 0 ? (\n        <>\n          <Filter />\n          <ContactList />\n        </>\n      ) : (\n        <Message>Contact list is empty</Message>\n      )}\n\n      <ToastContainer autoClose={2000} position=\"top-center\" theme=\"colored\" />\n    </Container>\n  );\n};\n\nexport default Contacts;\n"],"names":["NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","value","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","name","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","selectItems","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectFilter","filter","selectFilteredContacts","sortedContacts","sort","localeCompare","contact","toLowerCase","includes","_objectWithoutProperties","source","excluded","target","sourceKeys","keys","indexOf","getOwnPropertySymbols","sourceSymbolKeys","prototype","propertyIsEnumerable","call","r","e","t","f","n","Form","styled","FormInput","FormLabel","FormBtn","useState","setName","phone","setPhone","dispatch","useDispatch","useSelector","handleInputChange","evt","currentTarget","resetForm","onSubmit","preventDefault","toast","newContact","number","addContact","type","pattern","title","required","onChange","ContactsList","ContactItem","Btn","filteredContacts","id","onClick","contactId","deleteContact","FilterBlock","FilterLabel","FilterInput","placeholder","valueFilter","trim","setFilter","Container","Title","Subtitle","AmountContacts","ContactsNum","Message","useEffect","fetchContacts","autoClose","position","theme"],"sourceRoot":""}